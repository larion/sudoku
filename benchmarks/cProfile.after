 _  _  5  _  7  9  _  _  3 
 2  _  _  _  _  _  _  _  _ 
 3  4  8  _  _  _  _  _  _ 
 _  5  _  6  8  _  _  _  _ 
 _  7  _  2  _  4  _  8  _ 
 _  _  _  _  1  3  _  2  _ 
 _  _  _  _  _  _  4  7  1 
 _  _  _  _  _  _  _  _  6 
 8  _  _  7  9  _  3  _  _ 

 6  1  5  8  7  9  2  4  3 
 2  9  7  4  3  6  5  1  8 
 3  4  8  1  2  5  9  6  7 
 9  5  2  6  8  7  1  3  4 
 1  7  3  2  5  4  6  8  9 
 4  8  6  9  1  3  7  2  5 
 5  2  9  3  6  8  4  7  1 
 7  3  1  5  4  2  8  9  6 
 8  6  4  7  9  1  3  5  2 

human readable: 
 6  1  5  8  7  9  2  4  3 
 2  9  7  4  3  6  5  1  8 
 3  4  8  1  2  5  9  6  7 
 9  5  2  6  8  7  1  3  4 
 1  7  3  2  5  4  6  8  9 
 4  8  6  9  1  3  7  2  5 
 5  2  9  3  6  8  4  7  1 
 7  3  1  5  4  2  8  9  6 
 8  6  4  7  9  1  3  5  2 

repr: 
 {(7, 3): [5], (4, 7): [8], (1, 3): [4], (4, 8): [9], (3, 0): [9], (2, 8): [7], (8, 0): [8], (7, 8): [6], (5, 4): [1], (0, 7): [4], (5, 6): [7], (2, 6): [9], (1, 6): [5], (5, 1): [8], (3, 7): [3], (0, 3): [8], (8, 5): [1], (2, 5): [5], (5, 8): [5], (4, 0): [1], (1, 2): [7], (7, 4): [4], (6, 4): [6], (3, 3): [6], (0, 6): [2], (8, 1): [6], (7, 6): [8], (4, 4): [5], (6, 3): [3], (1, 5): [6], (8, 8): [2], (7, 2): [1], (3, 6): [1], (2, 2): [8], (7, 7): [9], (5, 7): [2], (5, 3): [9], (4, 1): [7], (1, 1): [9], (2, 7): [6], (3, 2): [2], (0, 0): [6], (6, 6): [4], (5, 0): [4], (7, 1): [3], (4, 5): [4], (0, 4): [7], (5, 5): [3], (1, 4): [3], (6, 0): [5], (7, 5): [2], (2, 3): [1], (2, 1): [4], (8, 7): [5], (6, 8): [1], (4, 2): [3], (1, 0): [2], (0, 8): [3], (6, 5): [8], (3, 5): [7], (0, 1): [1], (8, 3): [7], (7, 0): [7], (4, 6): [6], (6, 7): [7], (5, 2): [6], (6, 1): [2], (3, 1): [5], (8, 2): [4], (2, 4): [2], (3, 8): [4], (2, 0): [3], (1, 8): [8], (6, 2): [9], (4, 3): [2], (1, 7): [1], (8, 6): [3], (0, 5): [9], (3, 4): [8], (0, 2): [5], (8, 4): [9]}
sudoku.regions: 
[frozenset([(0, 1), (1, 2), (0, 0), (2, 1), (1, 1), (2, 0), (2, 2), (1, 0), (0, 2)]), frozenset([(2, 5), (1, 3), (1, 4), (1, 5), (0, 5), (0, 4), (2, 3), (0, 3), (2, 4)]), frozenset([(2, 7), (2, 6), (2, 8), (0, 7), (0, 6), (1, 8), (1, 6), (1, 7), (0, 8)]), frozenset([(3, 2), (3, 0), (5, 2), (3, 1), (5, 0), (5, 1), (4, 2), (4, 1), (4, 0)]), frozenset([(5, 4), (3, 3), (4, 5), (4, 4), (5, 5), (4, 3), (5, 3), (3, 4), (3, 5)]), frozenset([(4, 7), (4, 6), (4, 8), (5, 6), (5, 7), (3, 8), (3, 6), (3, 7), (5, 8)]), frozenset([(7, 0), (8, 2), (7, 1), (8, 1), (6, 1), (8, 0), (6, 0), (6, 2), (7, 2)]), frozenset([(6, 4), (8, 3), (7, 3), (7, 4), (6, 3), (7, 5), (8, 5), (6, 5), (8, 4)]), frozenset([(6, 7), (6, 8), (6, 6), (7, 6), (7, 7), (8, 8), (8, 7), (8, 6), (7, 8)]), frozenset([(0, 1), (0, 0), (0, 7), (0, 6), (0, 5), (0, 4), (0, 3), (0, 8), (0, 2)]), frozenset([(1, 2), (1, 3), (1, 4), (1, 5), (1, 8), (1, 6), (1, 7), (1, 0), (1, 1)]), frozenset([(2, 7), (2, 6), (2, 8), (2, 1), (2, 0), (2, 3), (2, 2), (2, 5), (2, 4)]), frozenset([(3, 2), (3, 3), (3, 0), (3, 1), (3, 8), (3, 6), (3, 7), (3, 4), (3, 5)]), frozenset([(4, 7), (4, 6), (4, 8), (4, 5), (4, 4), (4, 3), (4, 2), (4, 1), (4, 0)]), frozenset([(5, 4), (5, 5), (5, 6), (5, 7), (5, 0), (5, 1), (5, 2), (5, 8), (5, 3)]), frozenset([(6, 4), (6, 7), (6, 8), (6, 6), (6, 1), (6, 0), (6, 3), (6, 2), (6, 5)]), frozenset([(7, 3), (7, 0), (7, 1), (7, 6), (7, 7), (7, 4), (7, 5), (7, 8), (7, 2)]), frozenset([(8, 3), (8, 2), (8, 1), (8, 0), (8, 8), (8, 7), (8, 6), (8, 5), (8, 4)]), frozenset([(0, 0), (7, 0), (3, 0), (8, 0), (6, 0), (2, 0), (5, 0), (1, 0), (4, 0)]), frozenset([(0, 1), (7, 1), (8, 1), (6, 1), (3, 1), (2, 1), (5, 1), (4, 1), (1, 1)]), frozenset([(1, 2), (3, 2), (8, 2), (6, 2), (2, 2), (4, 2), (5, 2), (0, 2), (7, 2)]), frozenset([(7, 3), (8, 3), (1, 3), (3, 3), (6, 3), (2, 3), (4, 3), (0, 3), (5, 3)]), frozenset([(6, 4), (5, 4), (4, 4), (1, 4), (7, 4), (0, 4), (3, 4), (2, 4), (8, 4)]), frozenset([(5, 5), (4, 5), (1, 5), (7, 5), (0, 5), (2, 5), (8, 5), (6, 5), (3, 5)]), frozenset([(2, 6), (4, 6), (6, 6), (5, 6), (7, 6), (0, 6), (1, 6), (3, 6), (8, 6)]), frozenset([(2, 7), (4, 7), (6, 7), (5, 7), (7, 7), (0, 7), (8, 7), (1, 7), (3, 7)]), frozenset([(6, 8), (4, 8), (2, 8), (3, 8), (1, 8), (8, 8), (0, 8), (7, 8), (5, 8)])]
OK. Let's see how fast we can solve some puzzle collections.
50 puzzles from Project Euler
         48672 function calls in 0.191 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        2    0.000    0.000    0.000    0.000 decorators.py:13(memo)
     9038    0.019    0.000    0.033    0.000 decorators.py:17(f2)
        1    0.000    0.000    0.000    0.000 decorators.py:5(<module>)
        3    0.000    0.000    0.000    0.000 decorators.py:7(decorator)
        4    0.000    0.000    0.000    0.000 decorators.py:8(<lambda>)
        4    0.000    0.000    0.000    0.000 functools.py:17(update_wrapper)
        7    0.000    0.000    0.165    0.024 sudoku.py:121(solve)
       38    0.054    0.001    0.067    0.002 sudoku.py:156(solve1)
       37    0.039    0.001    0.080    0.002 sudoku.py:176(solve2)
       37    0.003    0.000    0.004    0.000 sudoku.py:190(solve3)
        9    0.003    0.000    0.003    0.000 sudoku.py:215(initialize_peers)
      468    0.001    0.000    0.001    0.000 sudoku.py:230(peers)
        9    0.000    0.000    0.001    0.000 sudoku.py:233(set_regions)
       90    0.000    0.000    0.000    0.000 sudoku.py:240(<genexpr>)
       90    0.000    0.000    0.000    0.000 sudoku.py:242(<genexpr>)
       90    0.000    0.000    0.000    0.000 sudoku.py:243(<genexpr>)
     1711    0.014    0.000    0.014    0.000 sudoku.py:250(subregion)
        7    0.000    0.000    0.000    0.000 sudoku.py:255(subregion_coords)
       20    0.000    0.000    0.000    0.000 sudoku.py:258(<genexpr>)
        7    0.002    0.000    0.164    0.023 sudoku.py:260(repeat_until_stuck)
      112    0.001    0.000    0.002    0.000 sudoku.py:282(is_solved)
      349    0.001    0.000    0.001    0.000 sudoku.py:285(<genexpr>)
       13    0.000    0.000    0.000    0.000 sudoku.py:287(is_consistent)
        1    0.001    0.001    0.001    0.001 sudoku.py:29(<module>)
      192    0.000    0.000    0.000    0.000 sudoku.py:291(<genexpr>)
       82    0.009    0.000    0.009    0.000 sudoku.py:295(get_table_hash)
      780    0.003    0.000    0.004    0.000 sudoku.py:299(char_to_cand_list)
       13    0.002    0.000    0.017    0.001 sudoku.py:328(read_str)
        9    0.005    0.001    0.010    0.001 sudoku.py:338(check_table)
      810    0.002    0.000    0.002    0.000 sudoku.py:349(<genexpr>)
        1    0.000    0.000    0.000    0.000 sudoku.py:35(SudokuError)
     4202    0.004    0.000    0.004    0.000 sudoku.py:356(<genexpr>)
        3    0.001    0.000    0.001    0.000 sudoku.py:361(__str__)
        1    0.000    0.000    0.000    0.000 sudoku.py:375(__repr__)
        1    0.000    0.000    0.000    0.000 sudoku.py:38(SudokuInputError)
        1    0.000    0.000    0.000    0.000 sudoku.py:47(SudokuCollection)
        1    0.000    0.000    0.000    0.000 sudoku.py:85(Sudoku)
       13    0.000    0.000    0.021    0.002 sudoku.py:90(__init__)
        1    0.001    0.001    0.191    0.191 sudoku_tests.py:3(<module>)
        1    0.001    0.001    0.189    0.189 sudoku_tests.py:6(test_sudoku_class)
      125    0.000    0.000    0.001    0.000 {all}
       20    0.000    0.000    0.000    0.000 {getattr}
       18    0.000    0.000    0.000    0.000 {hasattr}
       82    0.000    0.000    0.000    0.000 {hash}
        7    0.000    0.000    0.000    0.000 {isinstance}
    12652    0.007    0.000    0.007    0.000 {len}
     4522    0.004    0.000    0.004    0.000 {method 'append' of 'list' objects}
      243    0.000    0.000    0.000    0.000 {method 'center' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        3    0.001    0.000    0.001    0.000 {method 'format' of 'str' objects}
        9    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
       82    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
      125    0.000    0.000    0.000    0.000 {method 'itervalues' of 'dict' objects}
       90    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
    11495    0.010    0.000    0.010    0.000 {method 'remove' of 'list' objects}
        4    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {open}
      907    0.002    0.000    0.002    0.000 {range}
        1    0.000    0.000    0.000    0.000 {repr}
       12    0.000    0.000    0.000    0.000 {setattr}
       15    0.000    0.000    0.000    0.000 {sorted}


